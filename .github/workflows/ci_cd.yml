name: MNIST Model CI/CD

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: List directory contents
      run: |
        ls -la
        ls -la src/
    
    - name: Run tests
      run: |
        cd src
        python -m pytest test_model.py -v
    
    - name: Check model parameters
      run: |
        cd src
        python -c "
        from model import MNISTResNet
        model = MNISTResNet()
        params = model.count_parameters()
        print(f'Total parameters: {params}')
        assert params < 20000, f'Model has {params} parameters, exceeding limit of 20000'
        "
    
    - name: Verify model architecture
      run: |
        cd src
        python -c "
        from model import MNISTResNet
        import torch.nn as nn
        model = MNISTResNet()
        has_bn = any(isinstance(m, nn.BatchNorm2d) for m in model.modules())
        has_dropout = any(isinstance(m, nn.Dropout) for m in model.modules())
        assert has_bn, 'Model missing BatchNorm'
        assert has_dropout, 'Model missing Dropout'
        print('Architecture verification passed')
        "

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: src/__pycache__/
        retention-days: 30

    - name: Update status badge
      if: success()
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.GIST_ID }}
        filename: mnist-build-status.json
        label: build
        message: passing
        color: brightgreen